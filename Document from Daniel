#include <stdio.h>

#include <iostream>

#include <math.h>

#include <thread>

#include <vector>



using namespace std;



const int N = 100;

int indice;

int primo;

int primeiro;

long int total_cont = 0;

int num_threads = 10;

clock_t inicio, fim;





void crivo(int id, int primo, int primos[N+1]){

    for (int i=primo; i<N; i+=primo){

        if (i != primo)

            primos[i] = 0;

    }

}



int main() {

    primo = 2;

    int primos[N+1];

    primos[0] = 0;

    primos[1] = 0;

    inicio = clock();

	for (int i=primo;i<N;i++){

		primos[i] = 1;

	}



    vector<thread> threads;

    for (int i = 0; i < num_threads; i++) {

      if (primos[primo + i]){

        threads.push_back(thread(crivo,i,primo+i,primos));

      }

    }



    for (auto& th : threads) th.join();



    for (int i=0; i<N;i++){

        if (primos[i] == 1){

            total_cont++;

            cout << i << endl;

        }

    }

  fim = clock();

  double total = ((fim - inicio)*1000.0)/CLOCKS_PER_SEC;



  cout << "Tempo de execução: " << total <<"ms" <<endl;

	return 0;

}