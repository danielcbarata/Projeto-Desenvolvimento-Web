#include <iostream>
#include <omp.h>
#include <time.h>

using namespace std;

int cont = 0;
time_t inicio, fim;

int main() {
  int n = 100;
  int primos[n];
  inicio = clock();
#pragma omp parallel num_threads(10)
{
  cont ++;
  for(int i = 2; i < n; i++) 
  	primos[i] = 1;

  primos[0] = primos[1] = 0;

  for(int i = 2; i < n; i++) {
    int multiplo = i;

    while(multiplo + i < n) {
      multiplo += i;
      primos[multiplo] = 0;
    }

  }
}
  for(int i = 0; i < n; i++)
    if(primos[i]){
    	cout << i <<endl;
    }
    
  fim = clock();
  cout << "Qnt threads: " << cont <<endl;
  double total = ((fim - inicio)*1000.0)/CLOCKS_PER_SEC;
  cout << "Tempo de execução: " << total <<"ms" <<endl;

  return 0;
}